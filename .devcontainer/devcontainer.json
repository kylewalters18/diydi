// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
	"name": "DIYDI",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",
	// The optional 'runArgs' property can be used to specify additional runtime arguments.
	"runArgs": [
		"-v",
		"${env:HOME}${env:USERPROFILE}/.ssh:/root/.ssh-localhost:ro"
	],
	// Use 'settings' to set *default* container specific settings.json values on container create.
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		// This will ignore your local shell user setting for Linux since shells like zsh are typically
		// not in base container images. You can also update this to an specific shell to ensure VS Code
		// uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
		"terminal.integrated.shell.linux": "/bin/zsh"
	},
	// Uncomment the next line if you want to publish any ports.
	// "appPort": [],
	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-vscode.cpptools",
		"xaver.clang-format"
	],
	"postCreateCommand": "mkdir -p /root/.ssh && cp -r /root/.ssh-localhost/* /root/.ssh && chmod 700 /root/.ssh && chmod 600 /root/.ssh/*"
}
